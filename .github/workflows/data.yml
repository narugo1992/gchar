name: Data Publish

on:
  push:
  workflow_dispatch:
#  schedule:
#    - cron: '0 1 * * *'

jobs:
  data_crawl:
    name: Data Crawl
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        game:
          - 'arknights'
#          - 'fgo'
          - 'azurlane'
          - 'girlsfrontline'
          - 'genshin'
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.8'

    steps:
      - name: Get system version for Linux
        if: ${{ contains(matrix.os, 'ubuntu') }}
        shell: bash
        run: |
          echo "OS_NAME=Linux" >> $GITHUB_ENV
          echo "IS_WIN=" >> $GITHUB_ENV
          echo "IS_MAC=" >> $GITHUB_ENV
      - name: Get system version for Windows
        if: ${{ contains(matrix.os, 'windows') }}
        shell: bash
        run: |
          echo "OS_NAME=Windows" >> $GITHUB_ENV
          echo "IS_WIN=1" >> $GITHUB_ENV
          echo "IS_MAC=" >> $GITHUB_ENV
      - name: Get system version for MacOS
        if: ${{ contains(matrix.os, 'macos') }}
        shell: bash
        run: |
          echo "OS_NAME=MacOS" >> $GITHUB_ENV
          echo "IS_WIN=" >> $GITHUB_ENV
          echo "IS_MAC=1" >> $GITHUB_ENV
      - name: Set environment for Cpython
        if: ${{ !contains(matrix.python-version, 'pypy') }}
        shell: bash
        run: |
          echo "IS_PYPY=" >> $GITHUB_ENV
      - name: Set environment for PyPy
        if: ${{ contains(matrix.python-version, 'pypy') }}
        shell: bash
        run: |
          echo "IS_PYPY=1" >> $GITHUB_ENV
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
          submodules: 'recursive'
      - name: Set up system dependences on Linux
        if: ${{ env.OS_NAME == 'Linux' }}
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y tree cloc wget curl make zip
      - name: Set up system dependences on Windows
        if: ${{ env.OS_NAME == 'Windows' }}
        shell: bash
        run: |
          choco install tree cloc wget curl make zip
      - name: Set up system dependences on MacOS
        if: ${{ env.OS_NAME == 'MacOS' }}
        run: |
          brew install tree cloc wget curl make zip
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          pip install -r requirements.txt
          pip install -r requirements-test.txt
      - name: Test the basic environment
        shell: bash
        run: |
          python -V
          pip --version
          pip list
          tree .
          python -m gchar.games.${{ matrix.game }} --help
      - name: Run Crawler Code
        env:
          CI: 'true'
          TIMEOUT: '30'
        shell: bash
        run: |
          mkdir -p ${{ matrix.game }}
          python -m gchar.games.${{ matrix.game }} update -o ${{ matrix.game }}/index.json --timeout $TIMEOUT
          zip -r ${{ matrix.game }}.zip ${{ matrix.game }}
      - name: Upload the character databases
        uses: actions/upload-artifact@v3
        with:
          name: character-database
          path: ${{ matrix.game }}.zip

  data_upload:
    name: Data Upload
    runs-on: ${{ matrix.os }}
    needs: [ data_crawl ]
    strategy:
      fail-fast: false
      matrix:
        os:
          - 'ubuntu-latest'
        python-version:
          - '3.8'

    steps:
      - name: Prepare the repository
        shell: bash
        run: |
          sudo apt-get install -y tree
          git clone https://huggingface.co/datasets/deepghs/game_characters
          ls -al game_characters
      - name: Download from artifact
        uses: actions/download-artifact@v3
        with:
          name: character-database
          path: game_characters
      - name: See what is in this path
        shell: bash
        run: |
          cd game_characters
          for zfile in *.zip; do unzip -o $zfile; done
          rm -rf *.zip
          tree .
      - name: Push models to hugging face repostory
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          cd game_characters
          git config user.name 'narugo1992'
          git config user.email 'narugo@126.com'
          git add -A && git commit -a -m "dev(narugo): auto sync $(date -R)"
          git push https://narugo:$HF_TOKEN@huggingface.co/datasets/deepghs/game_characters main
